Adam Zucker
DSIR-1019 Capstone


CONTACTS:
* The Pudding (Matt Daniels & Mike Lacher): data and insight! Explain myself and my project succinctly
* Ishan Nagpal | inagpal2@illinois.edu: Experience with Spotify’s API and building a recommender system
* Sara Moore | Ronin | (email): Scalability and implementation?
* Alix Rosenberg | (email/LinkedIn): (Director, Artist Strategy at Ninja Tune): No longer with Spotify, but could have valuable insight on market trends and important metrics
* Joe Kelley | (phone/text): data on global, regional listening trends
* Jacob Bergson | (phone/text): metric for density in a mix? Alix Rosenberg’s email? Most interesting or telling metrics Spotify generates?
* Aaron Nevezie | (phone/text): metric for density in a mix? Most interesting or telling metrics Spotify generates?


TO DO:
* Test a couple popular songs in Librosa and compare the generated metrics to Spotify’s metrics. THIS IS VERY IMPORTANT!
* Investigate the extent and data availability of Spotify’s regional top songs
* Investigate the data availability of a Spotify artist’s and song’s geographical and demographic popularity
* Build playlists
* Gather list of top 200 global artists






Problem Statement:


The advent of affordable tools for home recording over the last 20 years has made music creation more accessible than ever before. Simultaneously, social media platforms such as Instagram and Facebook have made it similarly cheap and easy to advertise yourself to a targeted audience. However, most budding musicians, and even seasoned industry veterans, don't always know the best way to reach new fans; the how, who, and where questions always loom tall when it's time for a new release.
In this study, I intend to create a recommender system to show similarities between the music of a new artist and that of popular artists around the globe, in order to generate basic recommendations to best connect new artists with new fans. I'll base this model on data from hundreds of thousands of songs hosted on the popular streaming platform Spotify, along with metrics I'll extract from a new artist's music using a Python library called Librosa.




Questions to Answer:
* What artist(s) does your music most resemble? 
* Am I looking at the general metrics of an artist’s catalogue
* How and where do you market yourself based on this data? 
* How can you find your target audience?
* Can I get all the data I need? Particularly:
   * Listener demographics:
      * Age: can be an integer or class (binned ranges)
      * Location: country or region (as granular as possible)
      * “Taste” Profile: ?




This is a 2 part project:
1. Part 1: Comparing new audio to existing songs
   1. This is a recommender system - I’m comparing input data (new music) to existing data
   2. Cosine similarity between vectors is what I’ll want to look at primarily (see Lesson 8.07)
   3. Before going too far, test a song from Spotify in Librosa, and see if the corresponding metrics are close. Regardless, the different analysis algorithms (Spotify’s proprietary vs Librosa) need to be added as a caveat to the initial build.
2. Part 2: Matching artist “sounds like” data to market data
   1. All the modeling is taking place in the first step - this step is correlating sonic qualities to market locations and demographics.
   2. I’m not sure that’s true - this could be a second recommender system, or a classification model.


Data Collection & Analysis Tools:
* Spotify API & Tekore/Spotipy
* Librosa


Data:
* Spotify
   * Tracks: Audio Analysis & Audio Features metrics 
   * Playlists: Followers
   * Artists: Top Tracks
   * Albums: Album & Album Tracks
* Librosa
   * Core IO & DSP: Audio Loading, Spectral Representations, Magnitude Scaling, Time Unit Conversion, Frequency Unit Conversion
   * Display: Visualization tools
   * Feature Extraction: Spectral Features & Rhythm Features
   * Beat & Tempo
   * Temporal Segmentation
* Location of plays on Spotify (by city, country, region?)
* Billboard global charts


__________________
Look at cosine similarity, some distance-based metric between feature vectors generated with music input into librosa and spotify’s data




Show data from Spotify and Librosa for the same song - do the corresponding analyses match relatively well? Add as a caveat in the presentation.
__________________


Essentials for Gathering Spotify Data:
* Track Analysis
   * Can process up to 100 tracks in one scrape
      * Individual track IDs are needed - passed as an array
* Playlists
   * The followers feature could be insightful
   * The tracks object will get an array of the tracks in the playlist
      * Track names or track IDs? Need IDs.


Tekore:
* 

Librosa:
* 



Quantifiable Music Features:
* Tempo (round to 1 decimal place for practicality)
* Key
* Time signature
* Loudness (RMS & Peak)
* Minimum, Maximum Loudness; Dynamic Range (max - min)
* Duration
* Frequency distribution, frequency distribution over time
* Mode
* Boolean: does/does not contain vocals


Music Intangibles:
* Genre
* Timbre, to an extent
* Emotional experience
* 

Feature Engineering:
* Weight songs with a high popularity more heavily, such that more popular songs with high cosine similarity are recommended before unpopular songs with a slightly higher cosine similarity.
* Look for tracks with a speechiness of 1. See if they are spoken word or if some are actually music that’s been misclassified.
* Engineer Librosa equivalents for Spotify features.


Caveats:
* Music is much more than the statistical sum of its components. So much about the way we perceive and experience it is subjective (though do be sure to draw attention to the concretes). Intangibles are often used as descriptors: warmth, harshness, airy, lush, flat, ice-picky...
* Spotify is available in 92 countries, and is only one of many streaming platforms, let alone means of consuming music (what percentage of the streaming industry revenue does it account for? The industry in general?). For the purposes of this course, the scope has to be narrower than I’d like. I’d love more data on global music listening patterns, including other major domestic and foreign streaming platforms. I’d eventually like to incorporate data from blogs and local music publications from around the world!
* Ideally, it would be amazing if I could process spectrograms as images with a convolutional neural network, and compare their similarity that way. This could take immense computing power, and would require me to generate a dataframe of spectrograms (or matrices representing those spectrograms), as Spotify does not provide this data. A picture is worth a thousand words.
* Along these lines (and extractable from a spectrogram), I’d like to have numeric data for the frequency range for every track. Most modern music spans roughly the range of human hearing, from 20Hz to 20kHz. The further back in time you go, the narrower that frequency range gets, due to constraints of the media used at the time, and a phenomenon known as generation loss, wherein the transfer of recordings from multitrack mixdown tapes to master tapes to the master plate, or the mold from which production runs of vinyl were cut. Still, you could expect most music professionally recorded post-1960 to have a frequency range of at least 100Hz to 10kHz. I do want to include older music in the model for stylistic comparisons, but this would enable me to efficiently automate the filtering of speech and other non-music recordings (e.g., a bandwidth of 300Hz to 5kHz). 
* On excluding genre: Built with data from Spotify, the web app Every Noise at Once displays the 5139 genres of music currently represented on the streaming platform. Based on this ever-growing number, and with 15 years of experience in the music industry as an artist, writer, and engineer, I’ve come to believe that the concept of genre has failed to adequately classify and capture the nuance of music created around the world: especially as it relates to marketing your music as a new artist. [The subjective classification of genres can be inconsistent from platform to platform - streaming services, retailers, and publications/reviewers, as well as individual listeners.] 


I think a better way to approach marketing for a new artist is to use a range of sonic metrics to compare the statistical similarity of a new artist’s material to globally trending artists and songs. In doing so, I hope to isolate locations and demographics in which comparable music performs well, thus boosting the efficacy of inexpensive (Instagram and Facebook ads), independent, artist-led marketing campaigns.






* Lining up metrics: can I use a level of intuition, if I can generate some sort of constant transformer?
* Live updating via Spotify API?
* Feature Engineering
* Returning recs based on/sorted by 2 metrics
   * Cosine similarity
   * Popularity (Spotify only)
      * Weight